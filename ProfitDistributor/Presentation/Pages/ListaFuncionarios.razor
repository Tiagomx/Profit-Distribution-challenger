@page "/Employee"
@inject HttpClient _httpClient

<h2>Cadastro de Funcionários</h2>

<div class="container">
    <div class="row">
        <div class="col-xs-3">
            <button class="btn btn-primary" data-toggle="modal" data-target="#AddEditEmployeesModal" @onclick="@AddEmployees">
                <i class="fa fa-user-plus"></i>
            </button>
        </div>

        <div class="input-group col-md-4 offset-md-5">
            <input type="text" class="form-control" placeholder="Buscar" @bind="@searchString" />
            <div class="input-group-append">
                <button class="btn btn-info" @onclick="@SearchEmployees">
                    <i class="fa fa-search"></i>
                </button>
            </div>
        </div>
    </div>
</div>

<br />
@if (Employees == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <table class='table'>
        <thead>
            <tr>
                <th>Matricula</th>
                <th>Nome</th>
                <th>Área</th>
                <th>Cargo</th>
                <th>Salário</th>
                <th>Admissão</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Employees in Employees)
            {
                <tr>
                    <td>@Employees.RegistrationId</td>
                    <td>@Employees.Name</td>
                    <td>@Employees.Area</td>
                    <td>@Employees.Position</td>
                    <td>@Employees.Salary</td>
                    <td>@Employees.AdmissionDate</td>

                    <td>
                        <button class="btn btn-outline-dark" data-toggle="modal" data-target="#AddEditEmployeesModal"
                                @onclick="@(async () => await EditEmployees(@Employees.Id))">
                            <i class="fa fa-pencil-square-o"></i>
                        </button>
                        <button class="btn btn-outline-danger" data-toggle="modal" data-target="#DeleteEmployeesModal"
                                @onclick="@(async () => await DeleteConfirma(@Employees.Id))">
                            <i class="fa fa-trash-o"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="modal fade" id="AddEditEmployeesModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">@tituloModal</h3>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">X</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label class="control-label">Nome</label>
                        <input class="form-control" @bind="@Employee.Name" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Matricula</label>
                        <input class="form-control" @bind="@Employee.RegistrationId" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Área</label>
                        <select class="form-control" @bind="@Employee.Area">
                            <option value="">-- Área --</option>
                            <option value="Diretoria">Diretoria</option>
                            <option value="Contabilidade">Contabilidade</option>
                            <option value="Financeiro">Financeiro</option>
                            <option value="Tecnologia">Tecnologia</option>
                            <option value="Tecnologia">Serviços Gerais</option>
                            <option value="Tecnologia">Relacionamento com o Cliente</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Cargo</label>
                        <select class="form-control" @bind="@Employee.Position">
                            <option value="">-- Cargo --</option>
                            <option value="Funcionario">Funcionário</option>
                            <option value="Estagiario">Estagiário</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Salário Bruto</label>
                        <input class="form-control" @bind="@Employee.Salary" />
                    </div>

                    <div class="form-group">
                        <label class="control-label">Data de Admissão</label>
                        <input type="datetime" class="form-control" placeholder="yyyy-mm-dd" @bind="@Employee.AdmissionDate" />
                        @*<InputDate @bind-Value="@Employee.DataAdmissao" />*@
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-block btn-success"
                        @onclick="@(async () => await SaveEmployees())" data-dismiss="modal">
                    Salvar
                </button>
            </div>
        </div>
    </div>
</div>
@*------------------Deletar Employees -------------------*@
<div class="modal fade" id="DeleteEmployeesModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Confirmar Exclusão !!!</h3>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">X</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <tr>
                        <td>Nome</td>
                        <td>@Employee.RegistrationId</td>
                    </tr>
                    <tr>
                        <td>Sexo</td>
                        <td>@Employee.Name</td>
                    </tr>
                    <tr>
                        <td>Email</td>
                        <td>@Employee.Area</td>
                    </tr>
                    <tr>
                        <td>Cargo</td>
                        <td>@Employee.Position</td>
                    </tr>
                </table>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" data-dismiss="modal"
                        @onclick="@(async () => await DeleteEmployees(@Employee.RegistrationId))">
                    Deletar
                </button>
                <button data-dismiss="modal" class="btn">Cancelar</button>
            </div>
        </div>
    </div>
</div>
@*------------fim-----------------*@
@code{
    protected List<Employee> Employees = new List<Employee>();

    protected Employee Employee = new Employee();

    protected string tituloModal { get; set; }
    protected string searchString { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetListaEmployees();
    }

    protected async Task<List<Employee>> GetListaEmployees()
    {
        Employees = await _httpClient.GetFromJsonAsync<List<Employee>>("api/Employee");
        return Employees;
    }

    protected void AddEmployees()
    {
        Employee = new Employee();
        tituloModal = "Incluir Employees";
    }

    protected async Task SearchEmployees()
    {
        await GetListaEmployees();

        if (searchString != "")
        {
            Employees = Employees.Where(
            x => x.Name.IndexOf(searchString,
            StringComparison.OrdinalIgnoreCase) != -1).ToList();
        }
    }
    protected async Task EditEmployees(string EmployeesId)
    {
        Employee = await _httpClient.GetFromJsonAsync<Employee>("/api/Employee/" + EmployeesId);
        tituloModal = "Editar Employees";
    }
    protected async Task SaveEmployees()
    {
        if (Employee.RegistrationId != null)
        {
            await _httpClient.PutAsJsonAsync("api/Employee/", Employee);
        }
        else
        {
            await _httpClient.PostAsJsonAsync("/api/Employee/", Employee);
        }
        await GetListaEmployees();
    }
    protected async Task DeleteConfirma(string EmployeesId)
    {
        Employee = await _httpClient.GetFromJsonAsync<Employee>("/api/Employee/" + EmployeesId);
    }
    protected async Task DeleteEmployees(string EmployeesId)
    {
        Console.WriteLine(EmployeesId);
        await _httpClient.DeleteAsync("api/Employee/" + EmployeesId);
        await GetListaEmployees();
    }
}